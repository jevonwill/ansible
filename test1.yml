#ansible-playbook -i /home/ubuntu/ansible/group_vars/inventory.yml --private-key=/home/ubuntu/.ssh/bastion.pem
#ansible myhosts -m ping -i /home/ubuntu/ansible/group_vars/inventory.yml

---
- name: Create AWS VPC, Subnets, and Security Groups
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Create VPC
      ec2_vpc_net:
        name: dwVPC
        cidr_block: 10.1.0.0/16
        region: us-east-1
      register: vpc_result

    - name: Public Subnets
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_result.vpc.id }}"
        cidr: "{{ item.cidr }}"
        az: "{{ item.az }}"
        region: us-east-1
        map_public: true
      with_items:
        - { cidr: 10.1.1.0/24, az: "us-east-1a"}
        - { cidr: 10.1.2.0/24, az: "us-east-1b"}
      register: public_subnet_result

    - name: Private Subnets
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_result.vpc.id }}"
        cidr: "{{ item.cidr }}"
        az: "{{ item.az }}"
        region: us-east-1
        map_public: false
      with_items:
        - { cidr: 10.1.3.0/24, az: "us-east-1a"}
        - { cidr: 10.1.4.0/24, az: "us-east-1b"}
      register: private_subnet_result

    - name: Create IGW
      ec2_vpc_igw:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: us-east-1
        state: "present" 
        tags:
          Name: dwIGW
      register: igw

    - name: Create Security Group
      ec2_group:
        name: dw Public Access
        description: Security group for public instances
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: us-east-1
        rules:
          - proto: tcp
            ports: 
            - 80
            cidr_ip: 0.0.0.0./0
          - proto: tcp
            ports: 
            - 22
            cidr_ip: 0.0.0.0./0
      register: security_group
          
    - name: Create key pair
      ec2_key:
        name: dw_keypair
        region: us-east-1
      register: keypair

    - name: Copy EC2 Private Key locally so it can be later on used to SSH into the instance
      copy: content="{{ keypair.key.private_key }}" dest={{ ec2_key_directory }}key.ppk
      when: keypair.changed == true